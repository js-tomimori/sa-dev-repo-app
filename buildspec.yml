version: 0.2

env:
  # git認証情報ヘルパーを有効化##
  git-credential-helper: yes
  variables:
    # BuildKitを有効化(キャッシュ)
    DOCKER_BUILDKIT: "1"
    # IMAGE_REPO_NAME: "sa-ut-ecr-app"
    # CONTAINER_NAME: "web"
  parameter-store:
    AWS_ACCOUNT_ID: "account-id"

phases:
  # pre_build:
  #   commands:
  #     # タイムゾーンをJSTへ変換
  #     - export TZ="Asia/Tokyo"
  #     # AWSへのログイン
  #     - echo Logging in to Amazon ECR...
  #     - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  #     # タグ情報をSourceから取得
  #     - git switch master
  #     - git fetch --tags
  #     - LATEST_TAG=$(git describe --tags --abbrev=0)
  #     - echo "Latest tag is $LATEST_TAG"
  #     - PROJECT_NAME=$(echo $CODEBUILD_PROJECT_ARN | awk -F'[:/]' '{print $NF}')
  #     - ENV=$(aws codebuild batch-get-projects --name "$PROJECT_NAME" --query "projects[0].tags[?key=='Env'].value" --output text)
  pre_build:
    commands:
      # タイムゾーンをJSTへ変換
      - export TZ="Asia/Tokyo"
      # AWSへのログイン
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      # タグ取得
      - git switch master
      - git fetch --tags
      - LATEST_TAG=$(git describe --tags --abbrev=0)
      - echo "Latest tag is $LATEST_TAG"

      # CodeBuildタグ取得
      - PROJECT_NAME=$(echo $CODEBUILD_PROJECT_ARN | awk -F'[:/]' '{print $NF}')
      - ENV=$(aws codebuild batch-get-projects --name "$PROJECT_NAME" --query "projects[0].tags[?key=='Env'].value" --output text)

      # ECRリポジトリ名取得（Envタグ一致）
      - MATCHING_ECR_REPO=$(for repo in $(aws ecr describe-repositories --query 'repositories[*].repositoryName' --output text); do
          TAG_VALUE=$(aws ecr list-tags-for-resource \
            --resource-arn $(aws ecr describe-repositories --repository-names "$repo" --query 'repositories[0].repositoryArn' --output text) \
            --query "tags[?key=='Env'].value" --output text);
          if [ "$TAG_VALUE" = "$ENV" ]; then
            echo $repo;
            break;
          fi
        done)
      - export IMAGE_REPO_NAME=$MATCHING_ECR_REPO
      - echo "Using ECR repo: $IMAGE_REPO_NAME"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      # ビルド
      - docker build -t $IMAGE_REPO_NAME:$LATEST_TAG .
      # タグ付け
      # TODO: タグをSourceステージの変数から取得する
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      # ECRへプッシュ
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      # イメージ定義ファイル生成
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG > imagedefinitions.json

# アーティファクト出力
artifacts:
  files:
    - imagedefinitions.json
  name: build-$(date +%Y-%m-%d_%H%M).zip
